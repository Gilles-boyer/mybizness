1697126458
waR3U4bTeM%3Aaf129a41241418d4ec26ae2ee7c023d9-66416122283ccab75feb475ac718a06b
s:9276:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjY2NDE2MTIyMjgzY2NhYjc1ZmViNDc1YWM3MThhMDZiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTc6InZvdWNoZXIuYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzM6InJlc291cmNlcy92aWV3cy92b3VjaGVyLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NjAzNzoiPCFkb2N0eXBlIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4KICAgIDx0aXRsZT5DRkcgVm91Y2hlcjwvdGl0bGU+CiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjIuMS9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IgogICAgICAgIGludGVncml0eT0ic2hhMzg0LWlZUWVDekVZRmJLakEvVDJ1RExUcGt3R3pDaXE2c295OHRZYUkxR3lWaC9VanBiQ3gvVFlraVpobFpCNitmelQiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiPgogICAgPHN0eWxlPgogICAgICAgIC50ZXh0LXdoaXRlIHsKICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7CiAgICAgICAgfQoKICAgICAgICAuZm9udC1ib2xkIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgfQoKICAgICAgICAuY29sLTggewogICAgICAgICAgICBtYXJnaW4tbGVmdDogMjIwcHg7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICAgICAgfQoKICAgICAgICAuY29sLTQgewogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NzBweDsKICAgICAgICB9CgogICAgICAgIC5pbWctdGhlbWUgewogICAgICAgICAgICBoZWlnaHQ6IDM1MHB4OwogICAgICAgICAgICB3aWR0aDogMjAwcHg7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHgKICAgICAgICB9CgogICAgICAgIC5ici0yMCB7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHgKICAgICAgICB9CgogICAgICAgIC5ici0xNSB7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHgKICAgICAgICB9CgogICAgICAgIC53MTAwIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgfQoKICAgICAgICAudGV4dC1wcmltYXJ5IHsKICAgICAgICAgICAgY29sb3I6ICMwNDE1M2IKICAgICAgICB9CgogICAgICAgIC5iZy1zZWNvbmQgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGCiAgICAgICAgfQoKICAgICAgICAuY2FyZC10ZXh0IHsKICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4CiAgICAgICAgfQoKICAgICAgICAuY2FyZC10aXRsZSB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweAogICAgICAgIH0KCiAgICAgICAgLmxpc3QtZ3JvdXAtaXRlbSB7CiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogY2lyY2xlOwogICAgICAgIH0KCiAgICAgICAgaHIgewogICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMC41ZW07CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOwogICAgICAgICAgICBib3JkZXItc3R5bGU6IGluc2V0OwogICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDsKICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7CiAgICAgICAgICAgIHdpZHRoOiAzODBweAogICAgICAgIH0KCiAgICAgICAgQGZvbnQtZmFjZSB7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnRGFuY2luZ1NjcmlwdCc7CiAgICAgICAgICAgIHNyYzogdXJsKC9ob21lL2dpbGxlcy9BcHBsaWNhdGlvbi9teWJpem5lc3MvYXBpLW15Yml6bmVzcy9zdG9yYWdlL2ZvbnRzL0RhbmNpbmdTY3JpcHQtUmVndWxhci50dGYpIGZvcm1hdCgidHJ1ZXR5cGUiKTsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsOwogICAgICAgIH0KICAgICAgICBAaW1wb3J0IHVybCg8Pz0gICR2b3VjaGVyLT5mb250LT5mb250X2ZvbnQ7ID8+KTsKICAgICAgICAucGFnZS1icmVhayB7CiAgICAgICAgICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGFsd2F5czsKICAgICAgICB9CiAgICA8L3N0eWxlPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwQDUuMi4xL2Rpc3QvanMvYm9vdHN0cmFwLmJ1bmRsZS5taW4uanMiCiAgICAgICAgaW50ZWdyaXR5PSJzaGEzODQtdTFPa25DdnhXdlk1a2ZtTkJJTEsyaFJuUUMzUHIxN2ErUlRUNnJJSEk3Tm5pa3ZiWmxIZ1RQT09tTWk0NjZDOCIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+CiAgICA8L3NjcmlwdD4KICAgIDxtZXRhIG5hbWU9ImNzcmYtdG9rZW4iIGNvbnRlbnQ9Int7IGNzcmZfdG9rZW4oKSB9fSI+CjwvaGVhZD4KCjxib2R5PgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHcxMDAgYnItMjAiIHN0eWxlPSJoZWlnaHQ6MzgwcHg7IGJhY2tncm91bmQtY29sb3I6e3sgJHZvdWNoZXItPmNvbG9yLT5jb2xvcl9oZXggfX0iPgoKICAgICAgICAgICAgPGltZyBzcmM9Int7ICR2b3VjaGVyLT5pbWFnZS0+aW1hZ2Vfc3JjIH19IiBjbGFzcz0icm91bmRlZC1zdGFydCBtdC0zIGltZy10aGVtZSIgYWx0PSIuLi4iPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTgiPgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsiPgoKICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtdGl0bGUgdGV4dC13aGl0ZSI+Qm9uIENhZGVhdSBOwrAge3sgJHZvdWNoZXItPnZvdWNoZXJfbnVtIH19PC9oNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0IHRleHQtd2hpdGUiIHN0eWxlPSJmb250LWZhbWlseTogJ3t7ICR2b3VjaGVyLT5mb250LT5mb250X25hbWUgfX0nIj5Gw6lsaWNpdGF0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHVjZmlyc3QoJHZvdWNoZXItPm9yZGVyLT5iZW5lZmljaWFyeS0+dXNlcl9maXJzdF9uYW1lKSAuICcgJyB9fQogICAgICAgICAgICAgICAgICAgICAgICB7eyBzdHJ0b3VwcGVyKCR2b3VjaGVyLT5vcmRlci0+YmVuZWZpY2lhcnktPnVzZXJfbGFzdF9uYW1lKSB9fSwKICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCB0ZXh0LXdoaXRlIiBzdHlsZT0iZm9udC1mYW1pbHk6ICd7eyAkdm91Y2hlci0+Zm9udC0+Zm9udF9uYW1lIH19JyI+Tm91cyBhdm9ucyBsZQogICAgICAgICAgICAgICAgICAgICAgICBwbGFpc2lyIGRlIHZvdXMgYWNjZXVpbGxpciBwb3VyIDo8L3A+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgYmctc2Vjb25kIGJyLTE1IHRleHQtcHJpbWFyeSAiIHN0eWxlPSJoZWlnaHQ6MTIwcHg7IHdpZHRoOjI0MHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC1ncm91cCB0ZXh0LWNlbnRlciBwdC0yIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDtmb250LWZhbWlseTone3sgJHZvdWNoZXItPmZvbnQtPmZvbnRfbmFtZSB9fSciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGZvcmVhY2ggKCR2b3VjaGVyLT5vcmRlci0+cHJvZHVjdHMgYXMgJHByb2R1Y3QpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPnt7ICRwcm9kdWN0LT5wcm9kdWN0X25hbWUgfX08L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gKICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCB0ZXh0LXdoaXRlIG10LTQgbWItMiIgc3R5bGU9ImZvbnQtZmFtaWx5OiAne3sgJHZvdWNoZXItPmZvbnQtPmZvbnRfbmFtZSB9fSciPgogICAgICAgICAgICAgICAgICAgICAgICBWb3RyZQogICAgICAgICAgICAgICAgICAgICAgICBib24gZXN0IHZhbGlkZSBqdXNxdSdhdSA6PC9wPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGJnLXNlY29uZCBici0xNSBweC0xIHB5LTEgdGV4dC1jZW50ZXIiIHN0eWxlPSJoZWlnaHQ6MjhweDsgd2lkdGg6MjQwcHggIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCB0ZXh0LXByaW1hcnkgbXQtMSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6MTRweDtmb250LWZhbWlseTone3sgJHZvdWNoZXItPmZvbnQtPmZvbnRfbmFtZSB9fSciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgZGF0ZV9mb3JtYXQoZGF0ZV9jcmVhdGUoJHZvdWNoZXItPnZvdWNoZXJfdmFsaWRpdHkpLCAnZC1tLVknKSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCBtdC00IG1iLTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9IiB0ZXh0LXdoaXRlIiBzdHlsZT0ibWFyZ2luLWxlZnQ6NjBweDsgZm9udC1zaXplOjExcHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgUG91ciBwcm9maXRlciBkZSB2b3RyZSBjYWRlYXUsIFLDqXNlcnZleiB2aXRlIGF1IDA2OTIgNzI1IDU4NAogICAgICAgICAgICAgICAgICAgICAgICA8L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00Ij4KICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9IndpZHRoOjE1MHB4O21hcmdpbi10b3A6MTVweDsgbWFyZ2luLWxlZnQ6NzhweCIKICAgICAgICAgICAgICAgICAgICBzcmM9Int7IHB1YmxpY19wYXRoKCdhc3NldHMvbG9nb0NmZy5wbmcnKSB9fSIgYWx0PSJsb2dvIGNmZyIgLz4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgYmctc2Vjb25kIGJyLTE1IiBzdHlsZT0iaGVpZ2h0OjgzcHg7IHdpZHRoOjgzcHg7bWFyZ2luLWxlZnQ6MTMwcHgiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9Im1hcmdpbi1sZWZ0OiA2cHg7IG1hcmdpbi10b3A6NnB4IiBzcmM9e3sgJHFyY29kZSB9fSAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGJnLXNlY29uZCBici0xNSBtdC0zIHB0LTIiIHN0eWxlPSJoZWlnaHQ6OTRweDsgd2lkdGg6IDIwMHB4OyBtYXJnaW4tbGVmdDoxMHB4Ij4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0IHRleHQtcHJpbWFyeSBmb250IgogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweDsgbWFyZ2luLXJpZ2h0OjEwcHg7IGZvbnQtc2l6ZToxM3B4OyBmb250LWZhbWlseTogJ3t7ICR2b3VjaGVyLT5mb250LT5mb250X25hbWUgfX0nIj4KICAgICAgICAgICAgICAgICAgICAgICAge3sgJHZvdWNoZXItPnZvdWNoZXJfbWVzc2FnZSB9fQogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiIHN0eWxlPSJtYXJnaW4tdG9wOjI1cHgiPgogICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC13aGl0ZSIgc3R5bGU9Im1hcmdpbi1sZWZ0OjE1NXB4OyBmb250LXNpemU6MTFweCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHd3dy5jZmcucmUKICAgICAgICAgICAgICAgICAgICA8L3NtYWxsPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icGFnZS1icmVhayI+PC9kaXY+CgogICAgICAgIDxpbWcgc3JjPSJ7eyBwdWJsaWNfcGF0aCgnYXNzZXRzL2Jvbmtkby5wbmcnKSB9fSIgY2xhc3M9ImNhcmQgYmctcHJpbWFyeSB3MTAwIGJyLTIwIiBzdHlsZT0iaGVpZ2h0OjM4MHB4Ij4KICAgIDwvZGl2Pgo8L2JvZHk+Cgo8L2h0bWw+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";